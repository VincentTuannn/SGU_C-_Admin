@page "/login"
@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Components.Forms
@using System.Threading.Tasks
@inject NavigationManager NavigationManager
@* Add your authentication service injection here when you have one *@

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card shadow">
                <div class="card-header bg-primary text-white text-center">
                    <h3 class="mb-0">Đăng Nhập</h3>
                </div>
                <div class="card-body">
                    <EditForm Model="loginModel" OnValidSubmit="HandleLogin">
                        <DataAnnotationsValidator />
                        <ValidationSummary class="text-danger mb-3" />

                        <div class="mb-3">
                            <label for="email" class="form-label">Email:</label>
                            <InputText id="email" @bind-Value="loginModel.Email" class="form-control" />
                            <ValidationMessage For="@(() => loginModel.Email)" class="text-danger" />
                        </div>

                        <div class="mb-3">
                            <label for="password" class="form-label">Mật khẩu:</label>
                            <div class="input-group">
                                <InputText type="@(showPassword ? "text" : "password")" id="password"
                                           @bind-Value="loginModel.Password" class="form-control" />
                            </div>
                            <ValidationMessage For="@(() => loginModel.Password)" class="text-danger" />
                        </div>

                        <div class="mb-3 form-check">
                            <InputCheckbox id="rememberMe" @bind-Value="loginModel.RememberMe" class="form-check-input darker-border-checkbox" />
                            <label class="form-check-label" for="rememberMe">
                                Ghi nhớ đăng nhập
                            </label>
                        </div>

                        @if (!string.IsNullOrEmpty(errorMessage))
                        {
                            <div class="alert alert-danger" role="alert">
                                @errorMessage
                            </div>
                        }

                        <div class="d-grid gap-2">
                            <button type="submit" class="btn btn-primary" disabled="@isLoading">
                                @if (isLoading)
                                {
                                    <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
                                    <span class="ms-2">Đang xử lý...</span>
                                }
                                else
                                {
                                    <span>Đăng nhập</span>
                                }
                            </button>
                        </div>
                    </EditForm>

                    <div class="mt-3 text-center">
                        <p>Chưa có tài khoản? <a href="/register">Đăng ký</a></p>
                        <p><a href="/forgot-password">Quên mật khẩu?</a></p>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private LoginModel loginModel = new();
    private bool showPassword = false;
    private bool isLoading = false;
    private string errorMessage = string.Empty;

    private void TogglePasswordVisibility()
    {
        showPassword = !showPassword;
    }

    private async Task HandleLogin()
    {
        isLoading = true;
        errorMessage = string.Empty;

        try
        {
            // Simulate an API call delay
            await Task.Delay(1000);

            // TODO: Replace with your actual authentication logic
            // Example: var result = await AuthService.LoginAsync(loginModel.Email, loginModel.Password);

            // For now, we'll use a simple check for demo purposes
            if (loginModel.Email == "admin@example.com" && loginModel.Password == "password")
            {
                // Successful login
                NavigationManager.NavigateTo("/");
            }
            else
            {
                // Failed login
                errorMessage = "Email hoặc mật khẩu không chính xác.";
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"Đăng nhập thất bại: {ex.Message}";
        }
        finally
        {
            isLoading = false;
        }
    }

    public class LoginModel
    {
        [Required(ErrorMessage = "Email là bắt buộc")]
        [EmailAddress(ErrorMessage = "Email không hợp lệ")]
        public string Email { get; set; } = string.Empty;

        [Required(ErrorMessage = "Mật khẩu là bắt buộc")]
        [StringLength(100, ErrorMessage = "Mật khẩu phải có ít nhất {2} ký tự.", MinimumLength = 6)]
        public string Password { get; set; } = string.Empty;

        public bool RememberMe { get; set; }
    }
}